name: CI

on:
  pull_request:
  merge_group:
  push: # Run CI on the main branch after every merge. This is important to fill the GitHub Actions cache in a way that pull requests can see it
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  valence-fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.5.0
        with:
          toolchain: "nightly"
          components: "rustfmt"

      - name: Copy playground
        run: cp tools/playground/src/playground.template.rs tools/playground/src/playground.rs

      - name: cargo fmt
        run: cargo fmt --all -- --check

  valence-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.5.0

      - name: Copy playground
        run: cp tools/playground/src/playground.template.rs tools/playground/src/playground.rs

      - name: Install dependencies (Linux)
        run: sudo apt-get update && sudo apt-get install -y libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libclang-dev libgtk-3-dev

      - name: Validate documentation
        run: cargo doc --workspace --no-deps --all-features --document-private-items

  typos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v3
      
      - name: Check for spelling errors
        uses: crate-ci/typos@v1.16.5

  valence-clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.5.0
        with:
          toolchain: "stable"
          components: "clippy"

      - name: Copy playground
        run: cp tools/playground/src/playground.template.rs tools/playground/src/playground.rs

      - name: Install dependencies (Linux)
        run: sudo apt-get update && sudo apt-get install -y libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libclang-dev libgtk-3-dev

      - name: Clippy
        run: cargo clippy --workspace --no-deps --all-features --all-targets -- -D warnings

  valence-tests:
    strategy:
      fail-fast: true
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        style: [default]
        rust:
          - stable
        include:
          - style: default
            flags: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.5.0

      - name: Copy playground
        run: cp tools/playground/src/playground.template.rs tools/playground/src/playground.rs

      - name: Install dependencies (Linux)
        run: sudo apt-get update && sudo apt-get install -y libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libclang-dev libgtk-3-dev
        if: matrix.platform == 'ubuntu-latest'

      - name: Run tests
        run: cargo test --workspace ${{ matrix.flags }} --all-features --all-targets

      - name: Run doctests
        run: cargo test --workspace ${{ matrix.flags }} --all-features --doc

      - name: Run valence_nbt tests without preserve_order feature
        run: cargo test -p valence_nbt --all-targets

  extractor-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions Repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Test Build
        run: ./gradlew build
        working-directory: extractor
