name: Publish Website
on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Cache
        uses: Swatinem/rust-cache@v2
        id: cache
        with:
          prefix-key: "website"
      - name: Install rust toolchain and mdBook
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install mdbook
      - name: Install zola
        uses: taiki-e/install-action@v2
        with:
          tool: zola
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build website
        run: |
          cd website
          chmod +x build.sh
          ./build.sh
          cd ..
      - name: Fix permissions
        run: |
          chmod -c -R +rX "./website/public" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./website/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
