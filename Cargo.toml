[package]
name = "valence"
version.workspace = true
edition.workspace = true
description = "A framework for building Minecraft servers in Rust."
documentation.workspace = true
repository.workspace = true
readme = "README.md"
license.workspace = true
keywords = ["minecraft", "gamedev", "server", "ecs"]
categories = ["game-engines"]
include = ["/src", "/benches", "/examples", "/README.md", "/LICENSE.txt"]

[features]
default = [
    "advancement",
    "anvil",
    "boss_bar",
    "inventory",
    "log",
    "network",
    "player_list",
    "scoreboard",
    "world_border",
    "weather",
    "testing",
]
advancement = ["dep:valence_advancement"]
anvil = ["dep:valence_anvil"]
boss_bar = ["dep:valence_boss_bar"]
inventory = ["dep:valence_inventory"]
log = ["dep:bevy_log"]
network = ["dep:valence_network"]
player_list = ["dep:valence_player_list"]
scoreboard = ["dep:valence_scoreboard"]
world_border = ["dep:valence_world_border"]
weather = ["dep:valence_weather"]
testing = []

[dependencies]
anyhow.workspace = true
bevy_app.workspace = true
bevy_ecs.workspace = true
bevy_log = { workspace = true, optional = true }
uuid.workspace = true
bytes.workspace = true
rand.workspace = true
valence_advancement = { workspace = true, optional = true }
valence_anvil = { workspace = true, optional = true, features = [
    "bevy_plugin",
] }
valence_boss_bar = { workspace = true, optional = true }
valence_server.workspace = true
valence_inventory = { workspace = true, optional = true }
valence_network = { workspace = true, optional = true }
valence_player_list = { workspace = true, optional = true }
valence_registry.workspace = true
valence_scoreboard = { workspace = true, optional = true }
valence_weather = { workspace = true, optional = true }
valence_world_border = { workspace = true, optional = true }
valence_lang.workspace = true
valence_text.workspace = true
valence_ident.workspace = true

[dev-dependencies]
anyhow.workspace = true
clap.workspace = true
criterion.workspace = true
flume.workspace = true
noise.workspace = true     # For the terrain example.
tracing.workspace = true

[dev-dependencies.reqwest]
workspace = true
default-features = false
features = ["rustls-tls", "blocking", "stream"]

[[bench]]
name = "main"
harness = false

[profile.dev.package."*"]
opt-level = 3

[profile.dev]
opt-level = 1

[workspace]
members = ["crates/*", "tools/*"]
exclude = []
resolver = "2"

[workspace.package]
version = "0.2.0-alpha.1+mc.1.20.1"
edition = "2021"
repository = "https://github.com/valence-rs/valence"
documentation = "https://docs.rs/valence/"
license = "MIT"

[workspace.dependencies]
aes = "0.8.2"
anyhow = { version = "1.0.70", features = ["backtrace"] }
approx = "0.5.1"
arrayvec = "0.7.2"
async-trait = "0.1.60"
atty = "0.2.14"
base64 = "0.21.0"
bevy_app = { version = "0.11", default-features = false }
bevy_ecs = { version = "0.11", default-features = false, features = [
    "multi-threaded",
] }
bevy_hierarchy = { version = "0.11", default-features = false }
bevy_log = { version = "0.11" }
bevy_mod_debugdump = { version = "0.8.0", default-features = false }
bevy_utils = { version = "0.11" }
bitfield-struct = "0.5.3"
bitvec = "1.0.1"
byteorder = "1.4.3"
bytes = "1.2.1"
cesu8 = "1.1.0"
cfb8 = "0.8.1"
clap = { version = "4.0.30", features = ["derive"] }
criterion = "0.5.1"
derive_more = "1.0.0-beta.3"
directories = "5.0.0"
eframe = { version = "0.22.0", default-features = false }
egui = "0.22.0"
egui_dock = "0.6"
flate2 = "1.0.24"
flume = "0.11.0"
fs_extra = "1.2.0"
glam = "0.24.1"
heck = "0.5.0-rc.1"
hmac = "0.12.1"
image = "0.24.6"
indexmap = "2.0.0"
itertools = "0.11.0"
java_string = { path = "crates/java_string", version = "0.1.1" }
lru = "0.12.0"
noise = "0.8.2"
num = "0.4.0"
num-bigint = "0.4.3"
owo-colors = "3.5.0"
parking_lot = "0.12.1"
paste = "1.0.11"
pretty_assertions = "1.3.0"
proc-macro2 = "1.0.56"
quote = "1.0.26"
rand = "0.8.5"
rayon = "1.7.0"
regex = "1.6.0"
reqwest = { version = "0.11.12", default-features = false }
rfd = "0.11.3"
rsa = "0.9.2"
rsa-der = "0.3.0"
rustc-hash = "1.1.0"
serde = "1.0.160"
serde_json = "1.0.96"
sha1 = "0.10.5"
sha2 = "0.10.6"
syn = "2.0.15"
syntect = { version = "5.0.0", default-features = false }
tempfile = "3.3.0"
thiserror = "1.0.40"
time = "0.3.17"
tokio = { version = "1.27.0", features = ["full"] }
toml = "0.7.2"
tracing = "0.1.37"
tracing-subscriber = "0.3.16"
url = { version = "2.2.2", features = ["serde"] }
uuid = "1.3.1"
valence = { path = ".", version = "0.2.0-alpha.1" }
valence_advancement = { path = "crates/valence_advancement", version = "0.2.0-alpha.1" }
valence_anvil = { path = "crates/valence_anvil", version = "0.1.0" }
valence_boss_bar = { path = "crates/valence_boss_bar", version = "0.2.0-alpha.1" }
valence_build_utils = { path = "crates/valence_build_utils", version = "0.2.0-alpha.1" }
valence_entity = { path = "crates/valence_entity", version = "0.2.0-alpha.1" }
valence_generated = { path = "crates/valence_generated", version = "0.2.0-alpha.1" }
valence_ident = { path = "crates/valence_ident", version = "0.2.0-alpha.1" }
valence_ident_macros = { path = "crates/valence_ident_macros", version = "0.2.0-alpha.1" }
valence_inventory = { path = "crates/valence_inventory", version = "0.2.0-alpha.1" }
valence_lang = { path = "crates/valence_lang", version = "0.2.0-alpha.1" }
valence_math = { path = "crates/valence_math", version = "0.2.0-alpha.1" }
valence_nbt = { path = "crates/valence_nbt", features = [
    "uuid",
], version = "0.8.0" }
valence_network = { path = "crates/valence_network", version = "0.2.0-alpha.1" }
valence_player_list = { path = "crates/valence_player_list", version = "0.2.0-alpha.1" }
valence_protocol = { path = "crates/valence_protocol", version = "0.2.0-alpha.1" }
valence_protocol_macros = { path = "crates/valence_protocol_macros", version = "0.2.0-alpha.1" }
valence_registry = { path = "crates/valence_registry", version = "0.2.0-alpha.1" }
valence_scoreboard = { path = "crates/valence_scoreboard", version = "0.2.0-alpha.1" }
valence_server = { path = "crates/valence_server", version = "0.2.0-alpha.1" }
valence_server_common = { path = "crates/valence_server_common", version = "0.2.0-alpha.1" }
valence_text = { path = "crates/valence_text", version = "0.2.0-alpha.1" }
valence_weather = { path = "crates/valence_weather", version = "0.2.0-alpha.1" }
valence_world_border = { path = "crates/valence_world_border", version = "0.2.0-alpha.1" }
zip = "0.6.3"
